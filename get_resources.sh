#!/bin/bash

#  set -x

resources_arr=(bindings
componentstatuses
configmaps
endpoints
events
limitranges
namespaces
nodes
persistentvolumeclaims
persistentvolumes
pods
podtemplates
replicationcontrollers
resourcequotas
secrets
serviceaccounts
services
productions
postgresqls
mutatingwebhookconfigurations
validatingwebhookconfigurations
alerttemplates
archivelogs
audits
events
logpolicies
logs
notificationmessages
notificationreceivers
notifications
notificationsenders
notificationservers
notificationtemplates
grafanadashboards
alaudafeaturegates
clusteralaudafeaturegates
productconfigs
customresourcedefinitions
apiservices
chartrepos
charts
helmrequests
releases
applicationhistories
applications
controllerrevisions
daemonsets
deployments
replicasets
statefulsets
functionresources
groupbindings
groups
projectbindings
projectquotas
projects
roletemplates
userbindings
users
views
tokenreviews
localsubjectaccessreviews
selfsubjectaccessreviews
selfsubjectrulesreviews
subjectaccessreviews
horizontalpodautoscalers
cronjobs
jobs
configmaps
namespaces
nsemigrations
platforms
portal
projects
certificatesigningrequests
certificaterequests
certificates
challenges
clusterissuers
issuers
orders
clusters
leases
alaudaloadbalancer2
clusternetworkpolicies
domains
frontends
rules
redisfailovers
authcodes
authrequests
connectors
oauth2clients
offlinesessionses
passwords
refreshtokens
signingkeies
etcdbackups
etcdclusters
etcdrestores
events
ingresses
clusterfeds
features
imoocpods
namespaceoverviews
kafkabridges
kafkaconnectors
kafkaconnects
kafkaconnects2is
kafkamirrormaker2s
kafkamirrormakers
kafkarebalances
kafkas
kafkatopics
kafkausers
reports
nodes
pods
products
alertmanagers
podmonitors
prometheuses
prometheusrules
servicemonitors
thanosrulers
ingresses
networkpolicies
runtimeclasses
appreleases
commonconfigs
rels
catalogsources
clusterserviceversions
installplans
operatorgroups
subscriptions
packagemanifests
clusteraddontypes
clustercredentials
clusters
configmaps
cronhpas
csioperators
helms
ipams
lbcfs
logcollectors
machines
persistentevents
prometheuses
registries
tappcontrollers
volumedecorators
poddisruptionbudgets
podsecuritypolicies
alaudaproducts
acp
productbases
redisinstallers
tdsqldeploys
perconaservermongodbbackups
perconaservermongodbrestores
perconaservermongodbs
perconaxtradbbackups
perconaxtradbclusterbackups
perconaxtradbclusterrestores
perconaxtradbclusters
rabbitmqclusters
clusterrolebindings
clusterroles
rolebindings
roles
redis
priorityclasses
csidrivers
csinodes
storageclasses
volumeattachments
accounts
clusteraccounts
instancebindings
instances
requests
cronhpas
tracejobreports
tracejobs
mutations
validations)

for e in "${resources_arr[@]}"
do
    echo "kubectl get -n kafka ${e}"
    # kubectl get --all-namespaces deployment
    kubectl get -n kafka ${e}
    echo ""


done




